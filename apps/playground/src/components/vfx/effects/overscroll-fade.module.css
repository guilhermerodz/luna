/* Customize the variables as you wish */
:where(.f) {
  --min-fade-px: 50px;
  --fade-slice: 30%;
  --fade-percentage: calc(max(var(--fade-slice), var(--min-fade-px)));
  --transition-duration: .17s;
  --transition-easing: ease-out;
}

/* Implementation */
:where(.f) {
  width: 100%;
  height: 100%;
  transition: --up-multiplier var(--transition-duration) var(--transition-easing), --down-multiplier var(--transition-duration) var(--transition-easing);
  mask-size: 100% 100%;
  mask-image: linear-gradient(to bottom,
      transparent,
      black calc(var(--fade-percentage) * var(--up-multiplier)),
      black calc(100% - calc(var(--fade-percentage) * var(--down-multiplier))),
      transparent 100%);
}

:where(.up):not(.down) {
  --up-multiplier: 1;
  --down-multiplier: 0;
}

:where(.down):not(.up) {
  --up-multiplier: 0;
  --down-multiplier: 1;
}

:where(.up.down) {
  --up-multiplier: 1;
  --down-multiplier: 1;
}

@property --up-multiplier {
  syntax: '<number>';
  inherits: false;
  initial-value: 0;
}

@property --down-multiplier {
  syntax: '<number>';
  inherits: false;
  initial-value: 1;
}